syntax = "proto3";

service Server {
  rpc RegisterClient(RegisterRequest) returns (stream RegisterResponse) {}
  rpc GetSystemSize(VoidMsg) returns (SystemSizeResponse) {}
  rpc ForwardNoiseContributions(stream NoiseContribution) returns (stream NoiseContribution) {}
  rpc ShouldContribute(ShouldContributeRequest) returns (stream ShouldContributeResponse) {}
  rpc CommitUpdate(CommitUpdateRequest) returns (Ack) {}
  rpc TpShouldPartialDecrypt(ShouldDecryptRequest) returns (stream ShouldDecryptResponse) {}
  rpc TpPartialDecrypt(CommitUpdateRequest) returns (Ack) {}
  rpc GetGlobalUpdate(VoidMsg) returns (stream Model) {}
}

message SystemSizeResponse {
  int32 system_size = 1;
}

message NoiseContribution {
  int32 contributor_id = 1;
  int32 target_id = 2;
  string contribution = 3;
}

message RegisterRequest {
  int32 client_id = 1;
  int32 client_data_len = 2;
}

message RegisterResponse {
  float weight = 1;
  float total_weight = 2;
  Model model = 3;
  string method = 4;
}

message ShouldContributeRequest {
  int32 client_id = 1;
  float last_acc = 2;
}
message ShouldContributeResponse {
  bool contribute = 1;
}
message ShouldDecryptRequest {
  int32 client_id = 1;
}
message ShouldDecryptResponse {
  bool contribute = 1;
  Model model = 2;
}

message CommitUpdateRequest {
  int32 client_id = 1;
  Model model = 2;
}

message Model {
  bytes data = 1;
}
message VoidMsg {}

message Ack {
  bool result = 1;
}