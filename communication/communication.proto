syntax = "proto3";

service Client {
    rpc NewClient(ClientInformation) returns (Ack) {}
    rpc Initialize(stream PublicParameter) returns (Ack) {}
    rpc InitializeModel(Model) returns (Ack) {}
    rpc ReceiveContribution(Contribution) returns (Ack) {}
    rpc ClientUpdate(VoidMsg) returns (Model) {}
    rpc ClientApplyUpdate(Model) returns (Ack) {}
    rpc Setup(VoidMsg) returns (Ack) {}
}

service Server {
    rpc RegisterClient(ClientAddress) returns (ClientInformation) {}
    rpc ReceiveClients(VoidMsg) returns (stream ClientInformation) {}
    rpc ForwardContributions(stream Contribution) returns (Ack) {}
}

message Contribution {
    int32 contributor_id = 1;
    int32 target_id = 2;
    string contribution = 3;
}

message Model {
    bytes data = 2;
}

message PublicParameter {
    string name = 1;
    int32 value_int = 2;
    float value_float = 3;
    string value_string = 4;
}

message ClientAddress {
    string client_address = 1;
}

message ClientInformation {
    int32 client_id = 1;
    string client_address = 2;
}

message PublicKey {
    int32 owner_client = 1;
    int32 target_client = 2;
    int64 public_key = 3;
}

message VoidMsg {}

message Ack {
    bool result = 1;
}